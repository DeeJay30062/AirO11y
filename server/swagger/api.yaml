openapi: 3.0.0
info:
  title: AirO11y API
  version: 1.0.0
paths:
  /api/flights:
    get:
      summary: Get all flights
      parameters:
        - name: from
          in: query
          description: Departure airport code
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: Destination airport code
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Departure date (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of flights

    post:
      summary: Add a new flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                flightNumber:
                  type: string
                from:
                  type: string
                to:
                  type: string
                departureTime:
                  type: string
                  format: date-time
                arrivalTime:
                  type: string
                  format: date-time
                price:
                  type: number
                availableSeats:
                  type: integer
              required:
                - flightNumber
                - from
                - to
                - departureTime
                - arrivalTime
                - price
                - availableSeats
      responses:
        "201":
          description: Flight created
        "400":
          description: Invalid input
  /api/origins:
    get:
      summary: Get available origin cities
      responses:
        "200":
          description: List of origin cities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                status:
                  type: string
                  description: Optional frequent flyer status
                homeAirport:
                  type: string
                  description: User's default airport
                phone:
                  type: string
                  description: Optional phone number for SMS
                tsaNumber:
                  type: string
                  description: Optional TSA PreCheck number
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                      email:
                        type: string
                      status:
                        type: string
                      homeAirport:
                        type: string
        "400":
          description: Invalid input
  /api/auth/login:
    post:
      summary: Login with credentials
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Login successful
        "401":
          description: Unauthorized (invalid credentials)

  /api/auth/logout:
    post:
      summary: Log out the current user
      tags:
        - Authentication
      responses:
        "200":
          description: Logged out successfully

  /api/auth/me:
    get:
      summary: Get current authenticated user
      tags:
        - Authentication
      responses:
        "200":
          description: Authenticated user returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
        "401":
          description: Unauthorized
